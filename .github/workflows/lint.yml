name: Lint

on:
  push:
    branches: ["main"]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  clippy-rustdoc:
    name: Clippy & Rustdoc ${{ matrix.target.description }} ${{ matrix.rust.description }}

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        target:
          - { target: x86_64-unknown-linux-gnu, description: Native }
          - { target: wasm32-unknown-unknown, description: Web }
        rust:
          - { version: stable }
        include:
          - target: { target: wasm32-unknown-unknown, description: Web }
            rust: {
              version: nightly,
              description: with Atomics,
              component: ",rust-src",
              flags: "-Ctarget-feature=+atomics,+bulk-memory",
              docflags: "--cfg=docsrs",
              args: "-Zbuild-std=panic_abort,std",
            }

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust
        run: |
          rustup toolchain install ${{ matrix.rust.version }} --profile minimal --component clippy${{ matrix.rust.component }} --allow-downgrade --target ${{ matrix.target.target }}
          rustup default ${{ matrix.rust.version }}
      - name: Run Clippy
        env:
          RUSTFLAGS: ${{ matrix.rust.flags }}
        run: cargo clippy --all-targets --target ${{ matrix.target.target }} ${{ matrix.rust.args }} -- -D warnings
      - name: Run Rustdoc
        env:
          RUSTDOCFLAGS: -D warnings ${{ matrix.rust.flags }} ${{ matrix.rust.docflags }}
          RUSTFLAGS: ${{ matrix.rust.flags }}
        run: |
          cargo doc --no-deps --document-private-items --lib --examples --target ${{ matrix.target.target }} ${{ matrix.rust.args }}
